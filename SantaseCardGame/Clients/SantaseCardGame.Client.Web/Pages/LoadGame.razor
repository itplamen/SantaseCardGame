@page "/loadgame"

@inject IGameLoaderManager GameLoader;
@inject NavigationManager NavManager;

<div id="LoadGameBoard" class="game-info">
    <table>
        <thead>
            <tr>
                <th colspan="5">Saved Games</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th>Date</th>
                <th>Rounds</th>
                <th>Type</th>
                <th>Points</th>
                <th></th>
            </tr>
            @if (games != null)
            {
                @foreach (var game in games)
                {
                    <tr>
                        <td>@game.Date.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@game.Rounds.Count()</td>
                        <td>@game.Type</td>
                        <td>@GetPlayerPoints(game, PlayerPosition.First) / @GetPlayerPoints(game, PlayerPosition.Second)</td>
                        <td><input type="radio" name="LoadGame" id="@game.Id" value="@game.Id" @onclick="() => SelectGame(game.Id)" /></td>
                    </tr>
                }
                <tr>
                    <td colspan="5">
                        <button type="button" class="btn btn-success" @onclick="LoadSantaseGame">Load Game</button>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="5">No Games Found</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private string selectedGameId;
    private IEnumerable<Game> games;

    protected override async Task OnInitializedAsync()
    {
        games = await GameLoader.GetSavedGames();
    }

    private int GetPlayerPoints(Game game, PlayerPosition playerPosition)
    {
        return game.Rounds
            .Where(x => x.WinnerPosition == playerPosition)
            .Sum(x => x.Points);
    }

    private void SelectGame(string gameId)
    {
        selectedGameId = gameId;
    }

    private async void LoadSantaseGame()
    {
        if (!string.IsNullOrEmpty(selectedGameId))
        {
            await GameLoader.LoadGame(selectedGameId);
            
            NavManager.NavigateTo($"/singleplayer");
        }
    }
}
